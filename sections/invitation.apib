## Group Invitation

### Invitations to Ribose [/invitations/to_new_member]

#### Create an Invitation to Ribose [POST /invitations/to_new_member/mass_create]

- Request (application/json)

    - Attributes (object)

        - `invitation` (object)
            - `emails` (array[email]) - must specify at least either `emails`
            - `body` (string) - Body of invitation message to the invitees

- Response 422 (application/json)

- Response 200 (application/json)

    - Attributes (object)
        - `invitations` (object)
            - `success` (object)
                - `emails` (object)
                    - *user@example.com (email)* (InvitationToIndigo) - an object indexed by Email
                - `user_ids` (object)
            - `errors` (object)
                - `emails`
                    - *user@example.com (email)* (array[string]) - Array of error strings indexed by Email
                - `user_ids` (object) - empty


- Response 403 (application/json)

#### Retrieve a collection of Invitations to Ribose [GET /invitations/to_new_member{?view,start,length,s,order_by,direction}]

- Parameters

    - `view`: received (enum[string]) - which view to retrieve
        - Members
            - received
            - sent
    - `length`: 10 (number, optional) - how many objects to return (default = 10). Optional
    - `start`: 0 (number, optional) - pagination starting point (default = 0). Optional
    - `order_by` (enum[string], optional) - pagination sorting attribute. Optional
        - Members
            - created_at
            - updated_at
    - `direction` (enum[string], optional) - pagination sorting direction. Optional
        - Members
            - desc
            - asc
    - `s` (string) - pagination synchronization string

- Request (application/json)

- Response 200 (application/json)

    - Attributes (object)
        - `requested_at` (number) - token representing a timestamp of this request
        - `rejected_ids` (array[id]) - rejected invitation IDs
        - `total` (number) - total number of objects
        - `indices` (object) - map of { Int => Invitation ID }, for pagination purposes
            - *3 (string)* (id) - integer order on current page => invitation ID
        - `objects` (object)
            - *123456 (string)* (object) - an object indexed by invitation ID
                - `id` (id) - invitation
                - `email` (email, nullable) - invitee email
                - `body`  (string, nullable) - Invitation body message
                - `created_at` (DatetimeString) - invitation creation
                - `state` (enum[number])
                    - Members
                        - 0 - Pending
                        - 1 - Accepted
                        - 2 - Rejected
                        - 3 - Maybe
                        - 100 - Invalid
                - `type`: Invitation::ToIndigo (string, fixed)
                - `updated_at` (DatetimeString)
                - `invitee` (InviterInvitee)
                - `inviter` (InviterInvitee)

- Response 403 (application/json)

- Response 422 (application/json)

### Invitation to Ribose [/invitations/to_new_member/{invitation_id}]

- Parameters
    - `invitation_id` (id)

#### Resend an Invitation to Ribose [POST /invitations/to_new_member/{invitation_id}/resend]

    - inviter-only action
    - time throttled
    - only applicable to invitations sent to non-member emails

- Request (application/json)

- Response 200 (application/json)

    - Attributes (object)

        - success: true (boolean)

- Response 422 (application/json)

    - Attributes (object)

        - error_message: "Relax. You'll be able to resend the invitation 24 hours after your previous attempt." (string) - the error message


### Invitations to connection [/invitations/to_connection]

#### Retrieve a collection of Invitations to Connection [GET /invitations/to_connection{?view,start,length,s,order_by,direction}]

- Parameters

    - `view`: received (enum[string]) - which view to retrieve
        - Members
            - received
            - sent
    - `length`: 10 (number, optional) - how many objects to return (default = 10). Optional
    - `start`: 0 (number, optional) - pagination starting point (default = 0). Optional
    - `order_by` (enum[string], optional) - pagination sorting attribute. Optional
        - Members
            - created_at
            - updated_at
    - `direction` (enum[string], optional) - pagination sorting direction. Optional
        - Members
            - desc
            - asc
    - `s` (string) - pagination synchronization string

- Request (application/json)

- Response 200 (application/json)

    - Attributes (object)
        - `requested_at` (number) - token representing a timestamp of this request
        - `rejected_ids` (array[id]) - rejected invitation IDs
        - `total` (number) - total number of objects
        - `indices` (object) - map of { Int => Invitation ID }, for pagination purposes
            - *3 (string)* (id) - integer order on current page => invitation ID
        - `objects` (object)
            - *123456 (string)* (object) - an object indexed by invitation ID
                - `id` (id) - invitation
                - `email` (email, nullable) - invitee email
                - `body`  (string, nullable) - Invitation body message
                - `created_at` (DatetimeString) - invitation creation
                - `state` (enum[number])
                    - Members
                        - 0 - Pending
                        - 1 - Accepted
                        - 2 - Rejected
                        - 3 - Maybe
                        - 100 - Invalid
                - `type`: Invitation::ToConnection (string, fixed)
                - `updated_at` (DatetimeString)
                - `invitee` (InviterInvitee)
                - `inviter` (InviterInvitee)

- Response 403 (application/json)

- Response 422 (application/json)

#### Create an Invitation to Connection [POST /invitations/to_connection/mass_create]

- Request (application/json)

    - Attributes (object)

        - `invitation` (object)
            - `emails` (array[email]) - must specify at least either `emails` / `user_ids`
            - `user_ids` (array[uuid]) - must specify at least either `emails` / `user_ids`
            - `body` (string) - Body of invitation message to the invitees

- Response 422 (application/json)

- Response 200 (application/json)

    - Attributes (object)
        - `invitations` (object)
            - `success` (object)
                - `emails` (object)
                    - *user@example.com (email)* (InvitationToConnection) - an object indexed by Email
                - `user_ids` (object)
                    - *2d6696ad-f8ec-42a2-80c4-1ebd8196ce9c (uuid)* (InvitationToConnection) - an object indexed by User UUIDs
            - `errors` (object)
                - `emails`
                    - *user@example.com (email)* (array[string]) - Array of error strings indexed by Email
                - `user_ids`
                    - *2d6696ad-f8ec-42a2-80c4-1ebd8196ce9c (uuid)* (array[string]) - Array of error strings indexed by User UUIDs

- Response 403 (application/json)


### Invitation to connection [/invitations/to_connection/{invitation_id}]

- Parameters
    - `invitation_id` (id)

#### Delete / Cancel an Invitation to Connection [DELETE]

    - an inviter-only action

- Request (application/json)

- Response 200 (application/json)

    - Body

            {}

- Response 422 (application/json)

- Response 403 (application/json)

#### Accept / Reject an Invitation to Connection [PUT]

    - an invitee-only action

- Request (application/json)

    - Attributes (object)
        - `invitation` (object)
            - `state` (enum[number])
                - Members
                    - 1 - Accept
                    - 2 - Reject (ignore)

- Response 200 (application/json)
    - Attributes (InvitationToConnection)

- Response 403 (application/json)

- Response 422 (application/json)


### Invitations to Space [/invitations/to_space]

#### Retrieve a collection of Invitations to Space [GET /invitations/to_space{?view,start,length,s,order_by,direction}]

- Parameters

    - `view`: received (enum[string]) - which view to retrieve
        - Members
            - received
            - sent
    - `length`: 10 (number, optional) - how many objects to return (default = 10). Optional
    - `start`: 0 (number, optional) - pagination starting point (default = 0). Optional
    - `order_by` (enum[string], optional) - pagination sorting attribute. Optional
        - Members
            - created_at
            - updated_at
    - `direction` (enum[string], optional) - pagination sorting direction. Optional
        - Members
            - desc
            - asc
    - `s` (string) - pagination synchronization string

- Request (application/json)

- Response 200 (application/json)

    - Attributes (InvitationsToSpace)

- Response 403 (application/json)

- Response 422 (application/json)

#### Mass create Invitations to Space [POST /spaces/{space_id}/invitations/to_space/mass_create]

- Parameters
    - `space_id` (uuid) - UUID of the Space under which invitations are to be created

- Request (application/json)

    - Attributes (object)

        - `invitation` (object)
            - `emails` (array[email])
            - `user_ids` (array[uuid])
            - `role_ids` (object)
                - *271A3A83-EA0C-450D-BAFB-51ED42C4CF10 (uuid)* (id) - Map from email / user ID to Space Role ID
                - *invitee@example.com (email)* (id) - Map from email / user ID to Space Role ID
            - `space_id` (uuid) - Space (same as :space_id)
            - `body` - Body of invitation message to the invitees

- Response 200 (application/json)

    - Attributes (object)
        - `invitations` (object)
            - `success` (object)
                - `emails` (object)
                    - *user@example.com (email)* (object) - an object indexed by Email
                        - Invitee (InviterInvitee)
                - `user_ids` (object)
                    - *2d6696ad-f8ec-42a2-80c4-1ebd8196ce9c (uuid)* (object) - an object indexed by User UUIDs
                        - Invitee (InviterInvitee)
            - `errors` (object)
                - `emails`
                    - *user@example.com (email)* (array[string]) - Array of error strings indexed by Email
                - `user_ids`
                    - *2d6696ad-f8ec-42a2-80c4-1ebd8196ce9c (uuid)* (object) - Array of error strings indexed by User UUIDs

#### Create an Invitation to Space [POST]

- Request (application/json)

    - Attributes (object)

        - `invitation` (object)
            - `state`: 0 (number, fixed)
            - `type`:  Invitation::ToSpace (string, fixed)
            - `space_id` (uuid) - Space ID
            - `body` (string) - Body of invitation message to the invitees
            - `invitee_id` (uuid) - invitee user ID

- Response 200 (application/json)

    - Attributes (object)

        - `to_space` (InvitationToSpace)

### Invitation to Space [/invitations/to_space/{invitation_id}]

- Parameters
    - `invitation_id` (id)


#### Delete a.k.a. Cancel an Invitation to Space [DELETE]

    - an inviter-only action

- Request (application/json)

- Response 200 (application/json)

        - {}

- Response 403 (application/json)

- Response 422 (application/json)

#### Update / Accept / Reject an Invitation to Space [PUT]

- Request Accept / Reject a.k.a Ignore (application/json)

    Must be performed by invitee.

    - Attributes (object)
        - `invitation` (object)
            - `state` (enum[number])
                - Members
                    - 1 - Accept
                    - 2 - Reject (ignore)

- Response 200 (application/json)

    - Attributes (object)

        - `to_space` (InvitationToSpace)

- Request Update pre-assigned role (application/json)

    Must be performed by inviter.

    - Attributes (object)

        - `invitation` (object)
            - `role_id` (id) - Space Role ID

- Response 200 (application/json)

    - Attributes (object)

        - `to_space` (InvitationToSpace)

### Join Space Requests [/invitations/join_space_request]

#### Create a Join Space Request [POST]

- Request (application/json)

    - Attributes (object)

        - `invitation` (object)
            - `state`: 0 (number, fixed)
            - `type`:  Invitation::JoinSpaceRequest (string, fixed)
            - `space_id` (uuid) - Space ID
            - `body` (string) - Body of invitation message to the invitees

- Response 200 (application/json)

    - Attributes (JoinSpaceRequest)

#### Retrieve a collection of Join Space Requests [GET /invitations/join_space_request{?view,start,length,s,order_by,direction}]

- Parameters

    - `view`: received (enum[string]) - which view to retrieve
        - Members
            - received
            - sent
    - `length`: 10 (number, optional) - how many objects to return (default = 10). Optional
    - `start`: 0 (number, optional) - pagination starting point (default = 0). Optional
    - `order_by` (enum[string], optional) - pagination sorting attribute. Optional
        - Members
            - created_at
            - updated_at
    - `direction` (enum[string], optional) - pagination sorting direction. Optional
        - Members
            - desc
            - asc
    - `s` (string) - pagination synchronization string

- Request (application/json)

- Response 200 (application/json)

    - Attributes (JoinSpaceRequests)

### Join Space Request [/invitations/join_space_request/{invitation_id}]

- Parameters
    - `invitation_id` (id)

#### Retrieve a Join Space Request [GET]

- Request (application/json)

- Response 200 (application/json)

    - Attributes (object)

        - `join_space_request` (InvitationToSpace)


#### Update / Accept / Reject a Join Space Request [PUT]

- Request Accept / Reject a.k.a Ignore (application/json)

    Must be performed by invitee.

    - Attributes (object)
        - `invitation` (object)
            - `state` (enum[number])
                - Members
                    - 1 - Accept
                    - 2 - Reject (ignore)

- Response 200 (application/json)

    - Attributes (object)

        - `join_space_request` (InvitationToSpace)

- Request Update pre-assigned role (application/json)

    Must be performed by Space Admin.

    - Attributes (object)

        - `invitation` (object)
            - `role_id` (id) - Space Role Id

- Response 200 (application/json)

    - Attributes (object)

        - `join_space_request` (InvitationToSpace)


